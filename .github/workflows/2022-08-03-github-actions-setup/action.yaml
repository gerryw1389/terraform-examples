
name: 'Runs a build'
description: 'Runs a build'

inputs:
  client-id:  
    description: 'client id'
    required: true
    default: 'client id'
  client-secret:  
    description: 'client secret'
    required: true
    default: 'client secret'
  tenant-id:  
    description: 'tenant id'
    required: true
    default: 'tenant id'
  sub-id:  
    description: 'sub id'
    required: true
    default: 'sub id'

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Download Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.2.0

    - name: Terraform Init
      id: init
      run: | 
        cd ./2022-08-03-github-actions-setup
        terraform init
      shell: bash
      env:
        ARM_CLIENT_ID: ${{ inputs.client-id }}
        ARM_CLIENT_SECRET: ${{ inputs.client-secret }}
        ARM_SUBSCRIPTION_ID: ${{ inputs.sub-id }}
        ARM_TENANT_ID: ${{ inputs.tenant-id }}
        environment: production

    - name: Terraform Validate
      id: validate
      run: |
        terraform validate -no-color
      shell: bash
      env:
        ARM_CLIENT_ID: ${{ inputs.client-id }}
        ARM_CLIENT_SECRET: ${{ inputs.client-secret }}
        ARM_SUBSCRIPTION_ID: ${{ inputs.sub-id }}
        ARM_TENANT_ID: ${{ inputs.tenant-id }}
        environment: production

    - name: Terraform Plan
      id: plan
      run: |
        cd ./2022-08-03-github-actions-setup
        terraform plan \
          -var="subscription_id=$ARM_SUBSCRIPTION_ID" \
          -var="tenant_id=$ARM_TENANT_ID" \
          -var="client_id=$ARM_CLIENT_ID" \
          -var="client_secret=$ARM_CLIENT_SECRET" \
          -out "tf.plan"
      continue-on-error: false
      shell: bash
      env:
        ARM_CLIENT_ID: ${{ inputs.client-id }}
        ARM_CLIENT_SECRET: ${{ inputs.client-secret }}
        ARM_SUBSCRIPTION_ID: ${{ inputs.sub-id }}
        ARM_TENANT_ID: ${{ inputs.tenant-id }}
        environment: production